Reviewer 1:
8
Clear to see dependencies, good documentation in own file, could be included more in comments in actual code as well
Easy to find where to look for functionality for all parts
clearAtCurrentFloor did maybe not have intuitive placement in modules
Could break FSM down into several smaller functions for better maintainability
Consider encapsulating state in a separate state manager for all the elevator states, that the other modules use
The FSM and order handler have some comments, but they could be more detailed, function headers describing input/output behavior and expected side effects would be helpful
potential race conditions should be considered (e.g., modifying shared maps like remoteElevators without locks). A sync mechanism (like sync.Mutex) may be necessary
The longer functions could be split into smaller helper functions
Values like 999 (high cost), 10 (travel time), and 500ms (timeout) appear in the code without clear explanations, these should be defined as named constants to improve clarity
Overall logical structure, could benefit from more documentation

Reviewer 2:
7
+ The entry point clearly documents the componentes of the system, how they are dependent on each other using go routines and channels, and indicated the functionality very well
- Organisation of the modules should be improved to group them via functionality (put elevator, fsm into one module)
- Creation of a timer module adds functioality is already present in the go standard libary and creates confusion
- The elevator state is shared across multiple modules (orders, fsm, peers) this makes it hard to identify the responsible owner, identify the flow of information, and can also lead to snycronisation issues
> Bodies of codes are easy to follow in most modules, but the order modules contains heavily nested code and changing of the elevator state is hard to follow
- A lot of unused code is just commented out leading to cluttering of the code (this should never make it in a commit); some comments are present which try to document the code, but more docu should be added to function headers
> Naming of modules, functions, and var are verbose and precise, but a mixture between CamelCase and Underscore seperation is use

Reviewer 3:
8
Koden er godt organisert i logiske moduler som fsm, orders og network, noe som gjør den oversiktlig og enkel å navigere. Funksjonsnavnene er også for det meste beskrivende, slik at det er lett å forstå hva de ulike delene gjør.
README-filen gir en veldig god oversikt over prosjektets struktur og hvordan de ulike modulene samspiller.
Bruken av select og kanaler for å håndtere asynkrone hendelser er godt gjennomført og følger god praksis i Go. Dette bidrar til et robust og skalerbart system.
Fsm() og OrderHandler() har svært mange input-parametere, noe som gjør dem noe uoversiktlige. main.go har også unødvendig mange kanaler direkte i seg og kunne vært mer modulært ved å delegere ansvar til underliggende funksjoner.
Kommentarene i network-modulen er presise og gir akkurat nok informasjon til å forstå funksjonene uten å bli overveldende. I motsetning til dette er orders-modulen, spesielt cost.go, mindre oversiktlig og virker uferdig.
Det tar litt tid å sette seg inn i orders-modulen. Mulig man kunne håndtert logikken på en enklere måte. Noen av funksjonsnavnene var også litt kompliserte. 
Det mangler feilhåndtering flere steder. Det er for eksempel uklart hva som skjer hvis en heis blir utilgjengelig. Systemet kunne hatt en mer eksplisitt strategi for å håndtere slike scenarioer for å gjøre koden mer robust.

